version: '3'

services:
  nginx:
      #コンテナに名前をつけておくと管理が楽
    container_name: ${NGINX_NAME}
    image: nginx:1.17-alpine
    ports: 
        # ホスト側：コンテナ側のポート
        # ホスト側で8000番にアクセスするとコンテナ側の80番ポートにフォワードされる
      - ${HOST_PORT}:${NGINX_PORT}
    depends_on:
        #nginxがphpを動かすために依存関係を示す必要がある
      - php
    volumes:
        # コンテナにマウントするファイルの設定
        # ホスト側で編集した.confをコンテナ内に反映する
        # ホスト側のパス:コンテナ側のパスで表記
      - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf
      - .:/var/www/html

  php:
    container_name: ${PHP_NAME}
        #dockerイメージを読み込む
    build: ./docker/php 
    depends_on:
        #php経由でmysqlを動かす宣言
      - mysql
    volumes:
      - .:/var/www/html

  mysql:
    container_name: ${DB_NAME}
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - mysql-data:/var/lib/mysql
  
  node:
    container_name: ${NODE_NAME}
    build:
      context: ./
      dockerfile: ${NODE_CONTAINER_DIR}
    tty: true
    volumes:
      - ${LOCAL_DIR}:/app
    ports:
      - ${NODE_PORT}:${NODE_PORT}
      - ${NODE_UI_PORT}:${NODE_UI_PORT}

volumes:
  # mysqlデータの永続化（コンテナ消えてもデータは残る）
  mysql-data:
